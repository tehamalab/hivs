# Generated by Django 2.0.7 on 2018-08-02 12:20

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hivs_clients', '0003_add_field_street_and_area_to_profile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
                ('last_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='last modified')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='date')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='time')),
                ('remarks', models.TextField(blank=True, verbose_name='remarks')),
                ('review_remarks', models.TextField(blank=True, verbose_name='review remarks')),
                ('review_date', models.DateField(verbose_name='review date')),
                ('review_time', models.TimeField(blank=True, null=True, verbose_name='review time')),
                ('extras', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, verbose_name='extras')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
                ('last_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='last modified')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pp_deliveries', to='hivs_clients.Profile', verbose_name='client profile')),
                ('provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pp_delivery_providers', to=settings.AUTH_USER_MODEL, verbose_name='service provider')),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pp_delivery_reviewers', to=settings.AUTH_USER_MODEL, verbose_name='reviewer')),
            ],
            options={
                'verbose_name': 'Service Delivery',
                'verbose_name_plural': 'Services Delivery',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
                ('last_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='last modified')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='hivs_pp.Category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='delivery',
            name='services',
            field=models.ManyToManyField(related_name='deliveries', to='hivs_pp.Service', verbose_name='services delivered'),
        ),
    ]
